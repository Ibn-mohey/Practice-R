install.pakages("markdown")
local({pkg <- select.list(sort(.packages(all.available = TRUE)),graphics=TRUE)
if(nchar(pkg)) library(pkg, character.only=TRUE)})
local({pkg <- select.list(sort(.packages(all.available = TRUE)),graphics=TRUE)
if(nchar(pkg)) library(pkg, character.only=TRUE)})
utils:::menuInstallLocal()
utils:::menuInstallPkgs()
q()
library("swirl")
swirl()
0
add2 <-function(x , y) {
x + y
}
add2 (2, 4)
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
x <- 1:10
if(x > 5) {
x <- 0
}
x <- 1:10
if(x > 5) {
x <- 0
}f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
f(5)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
ls()
getwd()
library(swirl)
swirl()
num_vect <- (0.5, 55, -10, 6)
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- ("my", "name", "is" )
my_char <- ("my","name","is")
my_char <- c("my","name","is")
my_char <- c("my", "name", "is")
my_char <- c("My", "name", "is")
my_char
(my_char, collapse = " ")
paste(my_char, collapse = " ")
my_name < c(my_char, "mohey")
my_name <- c(my_char, "mohey")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(1:3, c("x","y","z")), sep ="")
paste(1:3, c("x","y","z"), sep ="")
paste(1:3, c("X","Y","Z"), sep ="")
paste(LETTERS, 1:4, sep = "")
paste(LETTERS, 1:4, sep = "_")
paste(LETTERS, 1:4, sep = "-")
swirl()
info()
main()
(TRUE != FALSE) == !(6 == 7)
packageName(swirl)
library("swirl")
swirl()
info
info()
main()
sys.date()
Sys.Date()
mean(c(2, 4, 5))
submit()
boring_function('My first function!')
boring_function
submit()
sum(my_vector)
length(my_vector)
sum(my_vector)/length(my_vector)
submit()
my_mean(my_vector)
submit()
my_mean(c(4, 5, 10)
)
submit()
submit()
submit()
submit()
remainder(5)
remainder(11,
5)
remainder(divisor = 11, num = 5)
remainder(4, div = 2)
args(remainder)
submit()
submit()
evaluate(sd, c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x){x[1]}, c(8, 4, 0))
evaluate(function(x){x[-1]}, c(8, 4, 0))
?paste
paste("Programming", "is", "fun!")
paste("Programming", "is", "fun!")
submit()
telegram(c("Hello", "world", ",", "how", "are", "we", "today", "?"))
submit()
mad_libs(place = London, adjustive = "beautiful", noun = "dog")
mad_libs(place = London, adjustive = "beautiful", noun = "dog")
mad_libs(place = "London", adjustive = "beautiful", noun = "dog")
mad_libs(place = "London", adjustive = "beautiful", noun = "dog")
submit()
"I" %p% "love" % "R!"
"I love R!"
"I" %p% "love" %p% "R!"
library(swirl)
swirl()
d1 <- sys.data()
d1 = sys.Date()
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 as.Date("1969-01-01")
d2 <- as.Date("1969-01-01")
unclass(d2)
Sys.time()
t1 <- Sys.time()
t1
class(t1)
unclass(11)
unclass(t1)
as.POSIXlt(Sys.time())
t2 <- as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
?str
t2$min
weekdays(d1)
month(t1)
months(t1)
quarters(t2)
t3 <- "October 17, 1986 08:24"
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units = 'days')
head(flags)
dim(flags)
class
(flags )
class(flags)
cls_list <- lappy(flags, class)
cls_list <- lapply(flags, class)
cls_list
str(cls_list)
class(cls_lsit)
class(cls_list)
as.character(cls_list)
sapply(frame, class)
cls_vect <- sapply(frame, class)
cls_vect <- sapply(flags, class)
class(cls_vect)
head(flags)
sum(flags$orange)
flags_colors <- flags[, 11:17]
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_color, sum)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
head(flag_shapes)
head(flags)
flag_shapes2 <- flags[, "circles":"sunstars"]
flag_shapes2 <- flags[, circles:sunstars]
flag_shapes2 <- flags[, flags$circles:flags$sunstars]
head(flag_shapes2)
flag_shapes2 <- flags[, c(flags$circles:flags$sunstars)]
head(flag_shapes2)
flag_shapes2 <- flags[, c("circles":"sunstars")]
head(flag_shapes2)
flag_shapes2 <- flags[, c("circles","sunstars")]
flag_shapes2 <- flags[, c("circles","sunstars")]
head(flag_shapes2)
flag_shapes2 <- flags[, which(colnames(flags)=="circles"):which(colnames(flags)=="sunstars"))]
head(flag_shapes2)
which(colnames(flags)=="circles"
0
flag_shapes2 <- flags[, which(colnames(flags)=="circles"):which(colnames(flags)=="sunstars")]
head(flag_shapes2)
lapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
lapply(flags, unique)
unique_vals <- lapply(flags, unique)
unique_vals
lapply(unique_vals, length)
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
Sys.Date()
mean(c(2, 4, 5))
submit()
submit()
boring_function('my first function
!')
boring_function('my first function!')
boring_function('My first function!')
boring_function
submit()
my_mean(c(4, ,5 ,10))
my_mean(c(4,5 ,10))
submit()
submit()
remainder(5)
remainder(11, 5)
remainder(divisor = 11, num = 5)
remainder(4, div = 2)
args(remainder)
submit()
submit()
submit()
evaluate()
evaluate(state.division, c(1.4, 3.6, 7.9, 8.8))
evaluate(stats::sd, c(1.4, 3.6, 7.9, 8.8))
evaluate(sd, c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1}, 6)
evaluate(x[1], c(8, 4, 0))
evaluate(function(x){x[1]}, c(8, 4, 0))
evaluate(function(x){x[-1]}, c(8, 4, 0))
?paste
paste("Programming", "is", "fun!")
submit
submit()
telegram(cool)
telegram("cool")
submit()
mad_libs(place = "London", adjustive = "beautiful", noun = "dog")
submit()
"I" %p% "love" %p% "R!"
sapply(flags, unique)
library(swirl)
mohey
rm(list=ls())
?dcast
library(reshape2)
install.packages("reshape2")
library(reshape2)
head(mtcars)
mtcars$carname <- rownames(mtcars)
carMelt <- melt(mtcars,id=c("carname","gear","cyl"),measure.vars=c("mpg","hp"))
head(carMelt,n=3)
mtcars$carname <- rownames(mtcars)
carMelt <- melt(mtcars,id=c("carname","gear","cyl"),measure.vars=c("mpg","hp"))
head(carMelt,n=3)
?melt
mtcars$carname
carMelt
?dcast
?strsplit
?names
library(data.table)
file1 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(file1, destfile = "./data/file1.csv",  method = "curl")
list.files("./data")
neames(data1)
setwd("E:/career/github/R-general-practice/getting and cleaning data/week 4 practices")
data1 <- data.table(
read.table("./data/file1.csv", sep = ",", header = TRUE)
)
head(data1)
names(data1)
#extract the names of them names(communities)
varNamesSplit <- strsplit(names(communities), "wgtp")
varNamesSplit[[123]]
split1 <- strsplit(names(data1), "wgtp")
split1[[123]]
file2 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(file2, destfile = "./data/file2.csv",  method = "curl")
data2 <- data.table(
read.table("./data/file2.csv", sep = ",", header = TRUE)
)
summary(data2)
df <- data.frame(numbers = c("123,456,789", "1,234,567", "1,234", "1"))
df$numbers <- gsub(",","",df$numbers)
df
df$numbers <- as.numeric(gsub(",","",df$numbers))
df
class(df)
df$numbers <- gsub(",","",df$numbers)
class(df)
x <- data2[,4, drop=FALSE]
head(x)
x <- data2[,5, drop=FALSE]
x
x <- data2[,5, drop=FALSE]
x <- x[-c(1:4)]
x
x <- data2[,5, drop=FALSE][-c(1:4)]
head(x)
mean(
gsub(',','',x)
)
x <- data2[,5, drop=FALSE][-c(1:4)]
mean(
gsub(',','',x)
)
x <- data2[,5, drop=FALSE][-c(1:4)]
mean(
gsub(',','',as.numeric(x))
)
x <- data2[,5, drop=FALSE][-c(1:4)]
mean(
as.numeric(gsub(',','',x))
)
x <- data2[,5, drop=FALSE][-c(1:4)]
mean(
as.integer(gsub(',','',x))
)
as.numeric()
x <- data2[,5, drop=FALSE][-c(1:4)]
mean <-mean(
as.integer(gsub(',','',x))
)
mean
x <- data2[,5, drop=FALSE][-c(1:4)]
mean <-mean(
as.integer(gsub(',','',x))
,na.rm = TRUE
)
mean
mean <-mean(
as.numeric(gsub(',','',x))
,na.rm = TRUE
)
x <- data2[,5, drop=FALSE][-c(1:4)]
mean <-mean(
as.numeric(gsub(',','',x))
,na.rm = TRUE
)
mean
x <- data2[,5, drop=FALSE][-c(1:4)]
mean <-mean(
as.numeric(gsub(',' ,'', x))
,na.rm = TRUE
)
mean
dtGDP <- data.table(read.csv("./data/file2.csv", skip = 4, nrows = 215, stringsAsFactors = FALSE))
head(dtGDP)
dtGDP <- dtGDP[, list(X, X.1, X.3, X.4)]
head(dtGDP)
setnames(dtGDP, c("X", "X.1", "X.3", "X.4"), c("CountryCode", "rankingGDP", "Long.Name", "gdp"))
head(dtGDP)
gdp <- as.numeric(gsub(",", "", dtGDP$gdp))
head(dtGDP)
> mean(gdp, na.rm = TRUE)
mean(gdp, na.rm = TRUE)
x
as.numeric(gsub(',' ,'', x))
s <- as.numeric(gsub(',' ,'', x))
s
data2 <- data.table(
read.table("./data/file2.csv", sep = ",",nrows = 215, header = TRUE)
)
x <- data2[,5, drop=FALSE][-c(1:4)]
mean <-mean(
as.numeric(gsub(',' ,'', x))
,na.rm = TRUE
)
mean
x
#solution inline
dtGDP <- data.table(read.csv("./data/file2.csv", skip = 4, nrows = 215, stringsAsFactors = FALSE))
dtGDP <- dtGDP[X != ""]
#solution inline
dtGDP <- data.table(read.csv("./data/file2.csv", skip = 4, nrows = 215, stringsAsFactors = FALSE))
dtGDP
data2 <- data.table(
read.table("./data/file2.csv" ,nrows = 215, header = TRUE)
)
x <- data2[,5, drop=FALSE][-c(1:4)]
x
dtGDP <- data.table(read.csv("./data/file2.csv", skip = 4, nrows = 215, stringsAsFactors = FALSE))
dtGDP <- dtGDP[X != ""]
dtGDP
data2 <- data.table(
read.table("./data/file2.csv" ,nrows = 215, header = TRUE)
)
data2
data2 <- data.table(
read.table("./data/file2.csv" ,nrows = 215, stringsAsFactors = FALSE))
data2 <- data.table(
read.table("./data/file2.csv" ,nrows = 215, stringsAsFactors = FALSE))
data2
dtGDP <- data.table(read.csv("./data/file2.csv", skip = 4, nrows = 215, stringsAsFactors = FALSE))
dtGDP
data2 <- data.table(
read.table("./data/file2.csv", skip = 4 ,nrows = 215, stringsAsFactors = FALSE))
data2
data2 <- data.table(
read.csv("./data/file2.csv", skip = 4 ,nrows = 215, stringsAsFactors = FALSE))
data2
data2 <- data.table(
read.csv("./data/file2.csv", sep = ",", header = TRUE))
data2
x <- data2[,5, drop=FALSE][-c(1:4)]
mean <-mean(
as.numeric(gsub(',' ,'', x))
,na.rm = TRUE
)
mean
x <- data2[,5, drop=FALSE][-c(1:4)]
x
as.numeric(gsub(',' ,'', x))
x <- data2[,5, drop=FALSE][-c(1:4)]
x
as.numeric(gsub(',' ,'', x))
y <- as.numeric(gsub(',' ,'', x))
y
data2 <- data.table(
read.csv("./data/file2.csv", sep = ",", nrows = 215, header = TRUE))
#gsub() will return a character vector, not a numeric vector (which is it sounds like you want).
#as.numeric() will convert the character vector back into a numeric vector:
#subset the needed column
x <- data2[,5, drop=FALSE][-c(1:4)]
mean <-mean(
as.numeric(gsub(',' ,'', x))
,na.rm = TRUE
)
mean
x
x <- data2[,5, drop=FALSE][-c(1:4)]
mean <-mean(
as.numeric(gsub(',' ,'', x))
,na.rm = TRUE
)
mean
data2 <- data.table(
read.csv("./data/file2.csv", sep = ",", nrows = 200, header = TRUE))
#gsub() will return a character vector, not a numeric vector (which is it sounds like you want).
#as.numeric() will convert the character vector back into a numeric vector:
#subset the needed column
x <- data2[,5, drop=FALSE][-c(1:4)]
mean <-mean(
as.numeric(gsub(',' ,'', x))
,na.rm = TRUE
)
mean
data2
dtGDP <- data.table(read.csv("./data/file2.csv", skip = 4, nrows = 215, stringsAsFactors = FALSE))
dtGDP
data2 <- data.table(
read.csv("./data/file2.csv", sep = ",", nrows = 219, header = TRUE))
data2
data2 <- data.table(read.csv("./data/file2.csv", sep = ",", nrows = 219))
data2
data2 <- data.table(read.csv("./data/file2.csv", sep = ",", nrows = 219, stringsAsFactors = FALSE))
data2
x
dtGDP <- data.table(read.csv("./data/file2.csv", skip = 4, nrows = 215, stringsAsFactors = FALSE))
dtGDP <- dtGDP[X != ""]
dtGDP <- dtGDP[, list(X, X.1, X.3, X.4)]
setnames(dtGDP, c("X", "X.1", "X.3", "X.4"), c("CountryCode", "rankingGDP", "Long.Name", "gdp")) gdp <- as.numeric(gsub(",", "", dtGDP$gdp)
#solution inline
dtGDP <- data.table(read.csv("./data/file2.csv", skip = 4, nrows = 215, stringsAsFactors = FALSE))
dtGDP <- dtGDP[X != ""]
dtGDP <- dtGDP[, list(X, X.1, X.3, X.4)]
setnames(dtGDP, c("X", "X.1", "X.3", "X.4"), c("CountryCode", "rankingGDP", "Long.Name", "gdp")) gdp <- as.numeric(gsub(",", "", dtGDP$gdp))
dtGDP
dtGDP$X.4
data2 <- data.table(read.csv("./data/file2.csv", sep = ",", nrows = 219, stringsAsFactors = FALSE))
data2$X.4
data2$X.5
head(data2)
data2$X.3
data2$X.3[-c(1:4)]
x <- data2$X.3[-c(1:4)]
mean <-mean(
as.numeric(gsub(',' ,'', x))
,na.rm = TRUE
)
mean
